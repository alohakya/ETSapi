<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.etsapi.mapper.ReportMapper">

    <insert id="addReport" parameterType="com.project.etsapi.entity.Report">
        INSERT INTO report(course_ID, project_name, student_ID,
                            report_name, score,submit_time, correct_time)
        VALUES (#{course_ID}, #{project_name},#{student_ID},
                #{report_name},#{score},#{submit_time},#{correct_time})
    </insert>

    <update id="updateReport" parameterType="com.project.etsapi.entity.Report">
        UPDATE report
        SET report_name = #{report_name},
            score = #{score},
            submit_time = #{submit_time},
            correct_time = #{correct_time}
        WHERE course_ID = #{course_ID}
          and project_name = #{project_name}
          and student_ID = #{student_ID}
    </update>

    <update id="updateScore" parameterType="com.project.etsapi.vo.CorrectInfo">
        update report
        set score = #{score},correct_time = #{correct_time}
        where course_ID = #{course_ID}
          and project_name = #{project_name}
          and student_ID = #{student_ID}
    </update>

    <select id="getProjectScoreInfoList" resultType="com.project.etsapi.vo.ProjectScoreInfo">
        SELECT
            c.project_name,
            FORMAT(SUM(IFNULL(score,0))/ COUNT(c.project_name),2) as avg_score,
            MAX(IFNULL(score,0)) as max_score,
            MIN(IFNULL(score,0)) as min_score
        FROM
            (SELECT * FROM
            ( SELECT name AS project_name FROM project WHERE course_ID = #{course_ID} ) AS a
                JOIN ( SELECT student_ID FROM takecourse WHERE course_ID = #{course_ID}) AS b) AS c
                LEFT JOIN ( SELECT project_name, student_ID, score FROM report WHERE course_ID = #{course_ID} ) AS d
                ON c.project_name = d.project_name AND c.student_ID = d.student_ID
        GROUP BY project_name
    </select>

    <select id="getReport" resultType="com.project.etsapi.entity.Report">
        select course_ID,project_name,student_ID,
               report_name,score,submit_time,correct_time
        from report
        where course_ID = #{course_ID}
          and student_ID = #{student_ID}
          and project_name = #{project_name}
    </select>

    <select id="getTotalReportList" resultType="com.project.etsapi.vo.ReportInfo">
        SELECT a.student_ID,a.name,report_name,submit_time,correct_time,score
        FROM
            ( SELECT course_ID, student_ID, name
            FROM takecourse NATURAL JOIN student
            WHERE course_ID = #{course_ID} AND is_student = "1" ) AS a
                LEFT JOIN (SELECT * FROM report
                WHERE course_ID = #{course_ID} and project_name = #{project_name}) AS b
                    ON a.course_ID = b.course_ID AND a.student_ID = b.student_ID
    </select>

    <select id="getStuProScoreList" resultType="com.project.etsapi.vo.StuPartScore">
        SELECT name,IFNULL(score,0) as score
        FROM
            (SELECT * FROM project WHERE course_ID = #{course_ID})as a
                left JOIN ( SELECT * FROM report WHERE student_ID = #{student_ID} ) as b
        on a.course_ID = b.course_ID
        and a.name = b.project_name
        WHERE (submit_time is null and correct_time is null and NOW() > end_time) or (submit_time is not null and correct_time is not null)
    </select>

    <select id="getStuTotalScore" resultType="com.project.etsapi.vo.StuPartScore">
        SELECT name,IFNULL(score,0) as score FROM
                (SELECT * from project WHERE course_ID = #{course_ID}) as a left join
            (SELECT * from report WHERE course_ID = #{course_ID} and student_ID = #{student_ID}) as b
            on a.name = b .project_name
    </select>
</mapper>
